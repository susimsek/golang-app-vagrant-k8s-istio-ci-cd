# Defines the deployment for the alfresco golangapp app
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "app.shortname" . }}-golangapp
  labels:
  {{- include "golangapp.labels" . | nindent 4 }}
    version: v1
spec:
  selector:
    matchLabels:
      {{- include "golangapp.selectorLabels" . | nindent 6 }}
      version: v1
  {{- if .Values.global.updateStrategy }}
  {{- if not .Values.golangapp.autoscaling.enabled }}
  replicas: {{ .Values.golangapp.replicaCount }}
  {{- end }}
  strategy: {{- toYaml .Values.global.updateStrategy | nindent 4 }}
  {{- end }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/config-golang-app.yaml") . | sha256sum }}
      labels:
    {{- include "golangapp.selectorLabels" . | nindent 8 }}
        version: v1
    spec:
      {{- if .Values.global.imagePullSecrets }}
      imagePullSecrets: {{- toYaml .Values.global.imagePullSecrets | nindent 4 }}
      {{- end }}
      containers:
        {{- if .Values.golangapp.extraSideContainers }}
        {{ tpl .Values.golangapp.extraSideContainers . | indent 8 }}
        {{- end }}
        - name: {{ .Chart.Name }}
          image: "{{ .Values.golangapp.image.repository }}:{{ .Values.golangapp.image.tag }}"
          imagePullPolicy: {{ .Values.golangapp.image.pullPolicy }}
          {{- if .Values.golangapp.command }}
          command:
          {{ tpl .Values.golangapp.command . | indent 12 }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.golangapp.containerPorts.http }}
          {{- if .Values.golangapp.livenessProbe.enabled }}
          livenessProbe: {{- omit .Values.golangapp.livenessProbe "enabled" | toYaml | nindent 12 }}
          {{- else if .Values.golangapp.customLivenessProbe }}
          livenessProbe: {{- toYaml .Values.golangapp.customLivenessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.golangapp.readinessProbe.enabled }}
          readinessProbe: {{- omit .Values.golangapp.readinessProbe "enabled" | toYaml | nindent 12 }}
          {{- else if .Values.golangapp.customReadinessProbe }}
          readinessProbe: {{- toYaml .Values.golangapp.customReadinessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.golangapp.resources }}
          resources: {{- toYaml .Values.golangapp.resources | nindent 12 }}
          {{- end }}
          envFrom:
            - configMapRef:
                name: {{ template "app.shortname" . }}-golangapp-configmap
          volumeMounts:
            {{- if .Values.golangapp.extraVolumeMounts }}
            {{- toYaml .Values.golangapp.extraVolumeMounts | nindent 12 }}
            {{- end }}
      {{- if .Values.golangapp.extraInitContainers }}
      initContainers:
      {{ tpl .Values.golangapp.extraInitContainers . | indent 8 }}
      {{- end }}
      {{- if .Values.golangapp.extraVolumes }}
      volumes:
        {{- if .Values.golangapp.extraVolumes }}
        {{- toYaml .Values.golangapp.extraVolumes | nindent 8 }}
        {{- end }}
  {{- end }}